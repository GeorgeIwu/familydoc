type User
  @model(queries: { get: "getUser" })  {
    id: ID!
    type: String!
    email: String!
    username: String!
    phone_number: String!
    family_name: String!
    given_name: String!
    chats: [ChatMember] @connection(keyName: "byMember", fields: ["id"])
    createdAt: AWSDateTime!
    updatedAt: AWSDateTime!
}

type Chat
  @model(queries: { get: "getChat" }) {
    id: ID!
    name: String!
    owner: String!
    messages: [Message]
    members: [ChatMember] @connection(keyName: "byChat", fields: ["id"])
    createdAt: AWSDateTime!
    updatedAt: AWSDateTime!
}

type ChatMember
  @model(queries: null)
  @key(name: "byChat", fields: ["chatID", "memberID"])
  @key(name: "byMember", fields: ["memberID", "chatID"]) {
    id: ID!
    chatID: ID!
    memberID: ID!
    status: StatusType!
    priviledges: [MessageType]
    chat: Chat @connection(fields: ["chatID"])
    member: User! @connection(fields: ["memberID"])
    createdAt: AWSDateTime!
    updatedAt: AWSDateTime!
}

type Message
  @model(queries: null)
  @key(name: "byMessageChatId", fields: ["messageChatId"])
  @auth(rules: [ { allow: owner, operations: [update, delete] } ]) {
    id: ID!
    text: String
    owner: String!
    messageChatId: ID!
    type: MessageType!
    createdAt: AWSDateTime!
    updatedAt: AWSDateTime!
}

type ModelChatConnection {
  items: [Chat]
  nextToken: String
}

type ModelChatMemberConnection {
  items: [ChatMember]
  nextToken: String
}

type ModelMessageConnection {
  items: [Message]
  nextToken: String
}

type Mutation {
  updateMessageType(input: UpdateMessageTypeInput!): Message @function(name: "familydoce32e9d05-${env}")
}

type Query {
  listChats(userID: String, filter: ModelFilterInput, limit: Int, nextToken: String): ModelChatConnection @function(name: "familydoce32e9d05-${env}")
  listChatMembers(chatID: String, filter: ModelFilterInput, limit: Int, nextToken: String): ModelChatMemberConnection @function(name: "familydoce32e9d05-${env}")
  listChatMessages(chatID: String, filter: ModelFilterInput, limit: Int, nextToken: String): ModelMessageConnection @function(name: "familydoce32e9d05-${env}")
}

enum MessageType {
  ALL
  TEAM
  DRUG
  SCAN
  VITAL
  FINANCE
  LAB
}

enum StatusType {
  OFFERED
  REQUESTED
  APPROVED
}

input UpdateMessageTypeInput {
  id: ID!
  chatID: ID!
  memberID: ID!
  type: MessageType!
}

input ModelFilterInput {
  name: ModelStringFilterInput
  and: [ModelFilterInput]
  or: [ModelFilterInput]
  not: ModelFilterInput
}

input ModelStringFilterInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
}
