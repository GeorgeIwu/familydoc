enum StatusType {
  OFFERED
  REQUESTED
  APPROVED
}

enum MessageType {
  ALL
  TEAM
  DRUG
  SCAN
  VITAL
  FINANCE
  LAB
}

type ModelMessageConnection {
  nextToken: String
  items: [Message]
}

type Message
  @model(queries: null)
  @key(name: "byMessageChatId", fields: ["messageChatId"])
  @auth(rules: [
    { allow: owner, operations: [update, delete] }
  ]) {
    id: ID!
    text: String
    owner: String!
    messageChatId: ID!
    type: MessageType!
    createdAt: AWSDateTime!
    updatedAt: AWSDateTime!
}

type Chat
  @model(queries: { get: "getChat" }) {
    id: ID!
    name: String!
    owner: String!
    members: [ChatMember] @connection(keyName: "byChat", fields: ["id"])
    messages(nextToken: String): ModelMessageConnection @function(name: "familydocf7331a63-${env}")
    createdAt: AWSDateTime!
    updatedAt: AWSDateTime!
}

type ChatMember
  @model(queries: null)
  @key(name: "byChat", fields: ["chatID", "memberID"])
  @key(name: "byMember", fields: ["memberID", "chatID"]) {
    id: ID!
    chatID: ID!
    memberID: ID!
    status: StatusType!
    priviledges: [MessageType]
    chat: Chat @connection(fields: ["chatID"])
    member: User! @connection(fields: ["memberID"])
    createdAt: AWSDateTime!
    updatedAt: AWSDateTime!
}

type User
  @model {
    id: ID!
    type: String!
    email: String!
    username: String!
    phone_number: String!
    family_name: String!
    given_name: String!
    chats: [ChatMember] @connection(keyName: "byMember", fields: ["id"])
    createdAt: AWSDateTime!
    updatedAt: AWSDateTime!
}



